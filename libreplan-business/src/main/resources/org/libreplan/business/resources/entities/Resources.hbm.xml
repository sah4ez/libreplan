<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-access="field" package="org.libreplan.business.resources.entities">
 <class name="Resource" table="resource">
  <cache include="all" usage="read-write"/>
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <!-- IMPORTANT: type="long" must be specified (otherwise, Hibernate infers type="integer" -->
  <version generated="never" name="version" type="long"/>
  <property generated="never" lazy="false" name="code" not-null="true" unique="true"/>
  <property column="code_autogenerated" generated="never" lazy="false"
   name="codeAutogenerated" not-null="true"/>
  <property column="resource_type" generated="never" lazy="false"
   name="resourceType" not-null="true">
   <type name="org.hibernate.type.EnumType">
    <param name="enumClass">org.libreplan.business.resources.entities.ResourceType</param>
    <param name="useNamed">true</param>
   </type>
  </property>
  <!-- It is appropriate the index by the foreign key in the many-to-one side -->
  <set access="field" cascade="all-delete-orphan" inverse="true"
   name="criterionSatisfactions" sort="unsorted">
   <cache include="all" usage="read-write"/>
   <key column="resource" not-null="true"/>
   <one-to-many class="CriterionSatisfaction"/>
  </set>
  <!-- Assess the need of this mapping. It seems very heavy and should not be used. Remove it ?-->
  <set access="field" inverse="true" name="dayAssignments" sort="unsorted">
   <key column="resource_id" not-null="true"/>
   <one-to-many class="org.libreplan.business.planner.entities.DayAssignment"/>
  </set>
  <!-- Not indexed. Navigation from calendars to all the resources which have that calendar associated not used -->
  <many-to-one access="field" cascade="all"
   class="org.libreplan.business.calendars.entities.ResourceCalendar"
   column="base_calendar_id" name="calendar" unique="true"/>
  <!--  Indexed in the other side -->
  <set cascade="all-delete-orphan" inverse="true"
   name="resourcesCostCategoryAssignments" sort="unsorted">
   <key column="resource_id"/>
   <one-to-many class="org.libreplan.business.costcategories.entities.ResourcesCostCategoryAssignment"/>
  </set>
  <one-to-one cascade="all" name="limitingResourceQueue" property-ref="resource"/>
  <joined-subclass
   name="org.libreplan.business.resources.entities.Worker" table="worker">
   <key column="worker_id"/>
   <property column="first_name" generated="never" lazy="false" name="firstName"/>
   <property generated="never" lazy="false" name="surname"/>
   <property generated="never" lazy="false" name="nif"/>
   <many-to-one cascade="save-update"
    class="org.libreplan.business.users.entities.User" column="user_id"
    lazy="false" name="user" unique="true"/>
   <joined-subclass
    name="org.libreplan.business.resources.entities.VirtualWorker" table="virtual_worker">
    <key column="virtual_worker_id"/>
    <property generated="never" lazy="false" name="observations"/>
   </joined-subclass>
  </joined-subclass>
  <joined-subclass
   name="org.libreplan.business.resources.entities.Machine" table="machine">
   <key column="machine_id"/>
   <property generated="never" lazy="false" name="name"/>
   <property generated="never" lazy="false" name="description"/>
   <set cascade="all-delete-orphan" inverse="true"
    name="configurationUnits" sort="unsorted">
    <key column="machine" not-null="true"/>
    <one-to-many class="MachineWorkersConfigurationUnit"/>
   </set>
  </joined-subclass>
 </class>
 <!-- LimitingResourceQueue -->
 <class name="LimitingResourceQueue" table="limiting_resource_queue">
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <version generated="never" name="version" type="long"/>
  <many-to-one column="resource_id" name="resource" not-null="false" unique="true"/>
  <!--  Indexed the other side -->
  <set cascade="all-delete-orphan" inverse="true"
   name="limitingResourceQueueElements" sort="org.libreplan.business.resources.entities.LimitingResourceQueueElementComparator">
   <key column="limiting_resource_queue_id" not-null="true"/>
   <one-to-many class="org.libreplan.business.planner.limiting.entities.LimitingResourceQueueElement"/>
  </set>
 </class>
 <!-- Criterion -->
 <class name="Criterion" table="criterion">
  <cache include="all" usage="nonstrict-read-write"/>
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <version generated="never" name="version" type="long"/>
  <property generated="never" lazy="false" name="code" not-null="true" unique="true"/>
  <property access="field" generated="never" lazy="false" name="name"/>
  <property access="field" column="predefined_criterion_internal_name"
   generated="never" lazy="false" name="predefinedCriterionInternalName"/>
  <property access="field" generated="never" lazy="false" name="active"/>
  <many-to-one access="field" column="id_criterion_type" lazy="false"
   name="type" not-null="true"/>
  <many-to-one access="field" column="id_cost_category" lazy="false"
   name="costCategory" not-null="false"/>
  <!--  Indexed. It is probable to navigate from a criterion to its children criteria -->
  <many-to-one access="field" column="parent"
   index="idx_criterion_on_parent" name="parent" not-null="false"/>
  <!-- Indexed the other side -->
  <set access="field" cascade="save-update" lazy="false" name="children" sort="unsorted">
   <key column="parent" not-null="false"/>
   <one-to-many class="Criterion"/>
  </set>
  <!--
        Assess the removal of this mapping.
        It is not used frequently.
        It is not included index in the many-to-one side
        -->
  <set access="field" name="criterionRequirements" sort="unsorted">
   <key column="criterion_id" not-null="false"/>
   <one-to-many class="org.libreplan.business.requirements.entities.CriterionRequirement"/>
  </set>
  <properties name="nameAndType" unique="true">
   <property access="field" generated="never" insert="false"
    lazy="false" name="name" update="false"/>
   <property access="field" column="id_criterion_type" generated="never"
    insert="false" lazy="false" name="typeId" update="false"/>
  </properties>
 </class>
 <!-- CriterionSatisfaction -->
 <class name="CriterionSatisfaction" table="criterion_satisfaction">
  <cache include="all" usage="read-write"/>
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <version generated="never" name="version" type="long"/>
  <property generated="never" lazy="false" name="code" not-null="true" unique="true"/>
  <property access="field" column="start_date" generated="never"
   lazy="false" name="startDate" not-null="true"/>
  <property access="field" column="finish_date" generated="never"
   lazy="false" name="finishDate"/>
  <property access="field" column="is_deleted" generated="never"
   lazy="false" name="isDeleted"/>
  <!-- Indexed. It is not probable to ask for the criterion satisfactions of a criterion -->
  <many-to-one access="field" name="criterion" not-null="true"/>
  <!-- Indexed. It is useful to know the criterion satisfactions of a resource -->
  <many-to-one access="field" column="resource"
   index="idx_criterion_satisfaction_on_resource" name="resource" not-null="true"/>
 </class>
 <!-- CriterionType -->
 <class name="CriterionType" table="criterion_type">
  <cache include="all" usage="nonstrict-read-write"/>
  <id name="id" type="long">
   <generator class="increment"/>
  </id>
  <version generated="never" name="version" type="long"/>
  <property generated="never" lazy="false" name="code" not-null="true" unique="true"/>
  <property generated="never" lazy="false" name="name" unique="true"/>
  <property column="predefined_type_internal_name" generated="never"
   lazy="false" name="predefinedTypeInternalName"/>
  <property generated="never" lazy="false" name="description"/>
  <property column="allow_simultaneous_criterions_per_resource"
   generated="never" lazy="false" name="allowSimultaneousCriterionsPerResource"/>
  <property column="allow_hierarchy" generated="never" lazy="false" name="allowHierarchy"/>
  <property access="field" column="last_criterion_sequence_code"
   generated="never" lazy="false" name="lastCriterionSequenceCode"/>
  <property generated="never" lazy="false" name="enabled"/>
  <property column="code_autogenerated" generated="never" lazy="false"
   name="codeAutogenerated" not-null="true"/>
  <property generated="never" lazy="false" name="resource">
   <type name="org.hibernate.type.EnumType">
    <param name="enumClass">org.libreplan.business.resources.entities.ResourceEnum</param>
   </type>
  </property>
  <!-- Indexed the other side-->
  <set cascade="all,delete-orphan" inverse="true" name="criterions" sort="unsorted">
   <cache include="all" usage="nonstrict-read-write"/>
   <key column="id_criterion_type"/>
   <one-to-many class="Criterion"/>
  </set>
 </class>
 <!-- MachineWorkersConfigurationUnit -->
 <class name="MachineWorkersConfigurationUnit" table="machine_workers_configuration_unit">
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <version generated="never" name="version" type="long"/>
  <property access="field" generated="never" lazy="false" name="name" not-null="true"/>
  <property access="field" generated="never" lazy="false" name="alpha" not-null="true"/>
  <many-to-one access="field" class="Machine" name="machine" not-null="true"/>
  <set name="requiredCriterions" sort="unsorted" table="machine_configuration_unit_required_criterions">
   <key column="id" not-null="false"/>
   <many-to-many
    class="org.libreplan.business.resources.entities.Criterion"
    column="criterion_id" unique="false"/>
  </set>
  <set cascade="all-delete-orphan" inverse="true"
   name="workerAssignments" sort="unsorted">
   <key column="configuration_id"/>
   <one-to-many class="MachineWorkerAssignment"/>
  </set>
 </class>
 <!-- MachineWorkerAssignment -->
 <class name="MachineWorkerAssignment" table="machine_worker_assignment">
  <id name="id" type="long">
   <generator class="increment">
    <param name="max_lo">100</param>
   </generator>
  </id>
  <version generated="never" name="version" type="long"/>
  <property access="field" column="start_date" generated="never"
   lazy="false" name="startDate"/>
  <property access="field" column="finish_date" generated="never"
   lazy="false" name="finishDate"/>
  <many-to-one access="field" class="MachineWorkersConfigurationUnit"
   column="configuration_id" name="machineWorkersConfigurationUnit" not-null="true"/>
  <many-to-one access="field" class="Worker" column="worker_id" name="worker"/>
 </class>
</hibernate-mapping>
